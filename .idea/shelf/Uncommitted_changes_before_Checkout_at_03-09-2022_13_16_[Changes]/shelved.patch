Index: app/src/main/java/com/maths/beyond_school_280720220930/translation_engine/translator/SpeechToTextConverterSpelling.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.maths.beyond_school_280720220930.translation_engine.translator;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.RecognitionListener;\r\nimport android.speech.RecognizerIntent;\r\nimport android.speech.SpeechRecognizer;\r\nimport android.util.Log;\r\n\r\nimport com.maths.beyond_school_280720220930.translation_engine.ConversionCallback;\r\nimport com.maths.beyond_school_280720220930.translation_engine.ConverterEngine;\r\n\r\nimport org.json.JSONException;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\npublic class SpeechToTextConverterSpelling implements ConverterEngine<SpeechToTextConverterSpelling> {\r\n\r\n    private static final String TAG = SpeechToTextConverterEnglish.class.getSimpleName();\r\n\r\n    private ConversionCallback conversionCallaBack;\r\n    private SpeechRecognizer speechRecognizer = null;\r\n    private Map<String, String> words = new HashMap<>();\r\n\r\n    public SpeechToTextConverterSpelling(ConversionCallback callback) {\r\n        this.conversionCallaBack = callback;\r\n    }\r\n\r\n\r\n    @Override\r\n    public SpeechToTextConverterSpelling initialize(String message, Activity appContext) {\r\n        words.put(\"ye\", \"a\");\r\n        words.put(\"yay\", \"a\");\r\n        words.put(\"bee\", \"b\");\r\n        words.put(\"see\", \"c\");\r\n        words.put(\"dee\", \"d\");\r\n        words.put(\"ee\", \"e\");\r\n        words.put(\"eff\", \"f\");\r\n        words.put(\"gee\", \"g\");\r\n        words.put(\"aitch\", \"h\");\r\n        words.put(\"eye\", \"i\");\r\n        words.put(\"jay\", \"j\");\r\n        words.put(\"kay\", \"k\");\r\n        words.put(\"ell\", \"l\");\r\n        words.put(\"em\", \"m\");\r\n        words.put(\"en\", \"n\");\r\n        words.put(\"oh\", \"o\");\r\n        words.put(\"pee\", \"p\");\r\n        words.put(\"cue\", \"q\");\r\n        words.put(\"are\", \"r\");\r\n        words.put(\"ess\", \"s\");\r\n        words.put(\"tee\", \"t\");\r\n        words.put(\"you\", \"u\");\r\n        words.put(\"vee\", \"v\");\r\n        words.put(\"double you\", \"w\");\r\n        words.put(\"ex\", \"x\");\r\n        words.put(\"why\", \"y\");\r\n        words.put(\"zed\", \"z\");\r\n\r\n        var intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\r\n        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);\r\n        intent.putExtra(RecognizerIntent.EXTRA_CONFIDENCE_SCORES, true);\r\n        intent.putExtra(RecognizerIntent.EXTRA_PARTIAL_RESULTS, true);\r\n        intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 1);\r\n\r\n        var listener = new CustomRecognitionListener();\r\n        speechRecognizer = SpeechRecognizer.createSpeechRecognizer(appContext);\r\n        speechRecognizer.setRecognitionListener(listener);\r\n        speechRecognizer.startListening(intent);\r\n        return this;\r\n    }\r\n\r\n    @Override\r\n    public String getErrorText(int errorCode) {\r\n        var message = \"\";\r\n        switch (errorCode) {\r\n            case SpeechRecognizer.ERROR_AUDIO:\r\n                message = \"Audio recording error\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_CLIENT:\r\n                message = \"Client side error\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_INSUFFICIENT_PERMISSIONS:\r\n                message = \"Insufficient permissions\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_NETWORK:\r\n                message = \"Network error\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_NETWORK_TIMEOUT:\r\n                message = \"Network timeout\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_NO_MATCH:\r\n                message = \"No match\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_RECOGNIZER_BUSY:\r\n                message = \"RecognitionService busy\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_SERVER:\r\n                message = \"error from server\";\r\n                break;\r\n            case SpeechRecognizer.ERROR_SPEECH_TIMEOUT:\r\n                message = \"No speech input\";\r\n                break;\r\n            default:\r\n                message = \"Didn't understand, please try again.\";\r\n                break;\r\n        }\r\n        return message;\r\n    }\r\n\r\n    public void stop() {\r\n        if (speechRecognizer != null) {\r\n            speechRecognizer.stopListening();\r\n        }\r\n    }\r\n\r\n    // destroy Stp\r\n    public void destroy() {\r\n        if (speechRecognizer != null) {\r\n            speechRecognizer.stopListening();\r\n            speechRecognizer.destroy();\r\n            conversionCallaBack = null;\r\n            Log.d(\"TAG\", \"destroy: destroying STT \");\r\n        }\r\n    }\r\n\r\n    class CustomRecognitionListener implements RecognitionListener {\r\n        @Override\r\n        public void onReadyForSpeech(Bundle params) {\r\n            Log.d(TAG, \"onReadyForSpeech\");\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onBeginningOfSpeech() {\r\n            Log.d(TAG, \"onBeginningOfSpeech\");\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onRmsChanged(float rmsdB) {\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onBufferReceived(byte[] buffer) {\r\n            Log.d(TAG, \"onBufferReceived\");\r\n        }\r\n\r\n        @Override\r\n        public void onEndOfSpeech() {\r\n            Log.d(TAG, \"onEndOfSpeech\");\r\n            if (conversionCallaBack != null)\r\n                conversionCallaBack.onCompletion();\r\n        }\r\n\r\n        @Override\r\n        public void onError(int error) {\r\n            Log.d(TAG, \"onError\");\r\n            if (conversionCallaBack != null) {\r\n                conversionCallaBack.onErrorOccurred(getErrorText(error));\r\n                conversionCallaBack.getLogResult(\"onError : \" + error);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onResults(Bundle results) {\r\n            var translateResults = \"\";\r\n            var data = results.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);\r\n            conversionCallaBack.getLogResult(\"onResult : \" + data.get(0));\r\n            translateResults = data.get(0);\r\n            var s = words.get(translateResults.trim().toLowerCase(Locale.ROOT));\r\n            if (s != null)\r\n                translateResults = s;\r\n            if (conversionCallaBack != null) {\r\n                conversionCallaBack.getLogResult(\"onResultFormatted : \" + translateResults);\r\n                try {\r\n                    conversionCallaBack.onSuccess(translateResults.toLowerCase(Locale.ROOT));\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onPartialResults(Bundle partialResults) {\r\n            //            Log.i(\"LOG_TAG\", \"onPertialResults\" + result);\r\n//            ArrayList<String> matches = partialResults.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);\r\n//\r\n//            if (matches.size() != 0) {\r\n//\r\n//                result = matches.get(0).trim();\r\n//                conversionCallaBack.onPartialResult(\"Partial: \" + matches.get(0).trim() + \"\\n\");\r\n//                Log.i(\"ResultsIntP\", result + \"\");\r\n//                if (!result.equals(\"\")) {\r\n//                    try {\r\n//                        int res = Integer.parseInt(result.replace(\" \", \"\").trim());\r\n//                        Log.i(\"ResultInt \", res + \"\");\r\n//                    } catch (Exception e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//\r\n//                }\r\n//            }\r\n        }\r\n\r\n        @Override\r\n        public void onEvent(int eventType, Bundle params) {\r\n            Log.d(TAG, \"onEvent\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/maths/beyond_school_280720220930/translation_engine/translator/SpeechToTextConverterSpelling.java b/app/src/main/java/com/maths/beyond_school_280720220930/translation_engine/translator/SpeechToTextConverterSpelling.java
--- a/app/src/main/java/com/maths/beyond_school_280720220930/translation_engine/translator/SpeechToTextConverterSpelling.java	(revision 23509c1201be810b923936d5fa7c8ff71cc75432)
+++ b/app/src/main/java/com/maths/beyond_school_280720220930/translation_engine/translator/SpeechToTextConverterSpelling.java	(date 1662187171839)
@@ -36,29 +36,38 @@
         words.put("yay", "a");
         words.put("bee", "b");
         words.put("see", "c");
+        words.put("sea", "c");
         words.put("dee", "d");
+        words.put("de", "d");
+        words.put("thee", "d");
         words.put("ee", "e");
+        words.put("eh", "e");
         words.put("eff", "f");
         words.put("gee", "g");
+        words.put("jee", "g");
         words.put("aitch", "h");
-        words.put("eye", "i");
-        words.put("jay", "j");
-        words.put("kay", "k");
-        words.put("ell", "l");
-        words.put("em", "m");
-        words.put("en", "n");
-        words.put("oh", "o");
-        words.put("pee", "p");
-        words.put("cue", "q");
-        words.put("are", "r");
-        words.put("ess", "s");
-        words.put("tee", "t");
+        words.put("itch", "h");
+        words.put("hedge", "h");
+        words.put("hatch", "h");
+        words.put("edge", "h");
+        words.put("eye", "i"); words.put("aye", "i");
+        words.put("jay", "j");words.put("je", "j");words.put("joy", "j");
+        words.put("kay", "k");words.put("ke", "k");
+        words.put("ell", "l");words.put("yell", "l");words.put("hell", "l");words.put("el", "l");
+        words.put("em", "m"); words.put("am", "m");words.put("yam", "m");words.put("em", "m");
+        words.put("en", "n");words.put("yen", "n");
+        words.put("oh", "o");words.put("vow", "o");words.put("waw", "o");
+        words.put("pee", "p");words.put("pay", "p");words.put("pie", "p");
+        words.put("cue", "q");words.put("queue", "q");
+        words.put("are", "r");words.put("err", "r");words.put("year", "r");
+        words.put("ess", "s");words.put("es", "s");words.put("ass", "s");words.put("yes", "s");
+        words.put("tee", "t");words.put("tea", "t");
         words.put("you", "u");
-        words.put("vee", "v");
+        words.put("vee", "v");    words.put("wee", "v");    words.put("wee", "v");
         words.put("double you", "w");
-        words.put("ex", "x");
+        words.put("ex", "x");words.put("aex", "x");
         words.put("why", "y");
-        words.put("zed", "z");
+        words.put("zed", "z");words.put("zee", "z");words.put("jed", "z");
 
         var intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
         intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
Index: app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.maths.beyond_school_280720220930;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.media.MediaPlayer;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.google.android.youtube.player.YouTubeBaseActivity;\r\nimport com.google.android.youtube.player.YouTubeInitializationResult;\r\nimport com.google.android.youtube.player.YouTubePlayer;\r\nimport com.google.android.youtube.player.YouTubePlayerView;\r\nimport com.google.firebase.analytics.FirebaseAnalytics;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.maths.beyond_school_280720220930.SP.PrefConfig;\r\nimport com.maths.beyond_school_280720220930.database.log.LogDatabase;\r\nimport com.maths.beyond_school_280720220930.database.process.ProgressDataBase;\r\nimport com.maths.beyond_school_280720220930.database.process.ProgressM;\r\nimport com.maths.beyond_school_280720220930.databinding.ActivityLearningBinding;\r\nimport com.maths.beyond_school_280720220930.dialogs.HintDialog;\r\nimport com.maths.beyond_school_280720220930.english_activity.vocabulary.EnglishActivity;\r\nimport com.maths.beyond_school_280720220930.subjects.MathsHelper;\r\nimport com.maths.beyond_school_280720220930.translation_engine.ConversionCallback;\r\nimport com.maths.beyond_school_280720220930.translation_engine.SpeechToTextBuilder;\r\nimport com.maths.beyond_school_280720220930.translation_engine.TextToSpeechBuilder;\r\nimport com.maths.beyond_school_280720220930.translation_engine.translator.SpeechToTextConverter;\r\nimport com.maths.beyond_school_280720220930.translation_engine.translator.TextToSpeckConverter;\r\nimport com.maths.beyond_school_280720220930.utils.Soundex;\r\nimport com.maths.beyond_school_280720220930.utils.UtilityFunctions;\r\n\r\nimport org.json.JSONException;\r\n\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport io.reactivex.Observable;\r\nimport io.reactivex.Observer;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.functions.Consumer;\r\nimport io.reactivex.schedulers.Schedulers;\r\n\r\n\r\n// subject=addition,subtraction....\r\n// selectSub= 1- Digit addition\r\n\r\n@RequiresApi(api = Build.VERSION_CODES.O)\r\npublic class LearningActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener {\r\n\r\n    private static final String TAG = LearningActivity.class.getSimpleName();\r\n    private ActivityLearningBinding binding;\r\n    private int currentAnswer;\r\n    private int currentQuestion = 1;\r\n    private int correctAnswer = 0;\r\n    private int wrongAnswer = 0;\r\n    private final int MAX_QUESTION = 10;\r\n    private int DELAY_ON_STARTING_STT = 500;\r\n    private int DELAY_ON_SETTING_QUESTION = 3000;\r\n    private TextToSpeckConverter tts,ttsHelper;\r\n    private SpeechToTextConverter stt;\r\n    private Boolean isCallSTT = false;\r\n    private Boolean isCallTTS = true;\r\n    private Boolean isNewQuestionGenerated = true;\r\n    private Boolean isAnswered = false;\r\n    private boolean isAnsByTyping = false;\r\n    private boolean isTimerRunning = true;\r\n    private Toolbar toolbar;\r\n    Animation myFadeInAnimation;\r\n    private String subject = \"\";\r\n    private String selectedSub = \"\";\r\n    private String digit = \"\";\r\n    private String videoUrl = \"\";\r\n    private String api_key = \"\";\r\n    private LogDatabase logDatabase;\r\n    private FirebaseAnalytics analytics;\r\n    private FirebaseAuth auth;\r\n    private long startTime = 0, endTime = 0;\r\n    private String logs = \"\";\r\n    int currentNum1 = 0;\r\n    int currentNum2 = 0;\r\n    private TextView digit1Text;\r\n    private YouTubePlayer.PlaybackEventListener playbackEventListener;\r\n    private YouTubePlayer.PlayerStateChangeListener playerStateChangeListener;\r\n    private MediaPlayer mediaPlayer = null;\r\n    private int attempt = 3;\r\n    private YouTubePlayerView ytPlayer;\r\n    private String kidsName=\"\",kidsId=\"\",kidsGrade=\"\";\r\n    private int kidsAge=0;\r\n    Observable observable;\r\n    private List<ProgressM> progressData;\r\n    private long timeSpend=0;\r\n    private ProgressDataBase progressDataBase;\r\n    public static final int TIMER_VALUE = 15;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityLearningBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setToolbar();\r\n\r\n        logDatabase = LogDatabase.getDbInstance(this);\r\n        analytics = FirebaseAnalytics.getInstance(getApplicationContext());\r\n        auth = FirebaseAuth.getInstance();\r\n        subject = getIntent().getStringExtra(\"subject\");\r\n        digit = getIntent().getStringExtra(\"max_digit\");\r\n        videoUrl = getIntent().getStringExtra(\"video_url\");\r\n        selectedSub = getIntent().getStringExtra(\"selected_sub\");\r\n        api_key = getResources().getString(R.string.youtube_api);\r\n\r\n\r\n        ytPlayer = findViewById(R.id.videoView);\r\n\r\n        progressDataBase=ProgressDataBase.getDbInstance(LearningActivity.this);\r\n\r\n        kidsName=PrefConfig.readIdInPref(LearningActivity.this,getResources().getString(R.string.kids_name));\r\n        kidsId=PrefConfig.readIdInPref(LearningActivity.this,getResources().getString(R.string.kids_id));\r\n        kidsAge=UtilityFunctions.calculateAge(PrefConfig.readIdInPref(LearningActivity.this,getResources().getString(R.string.kids_dob)));\r\n\r\n\r\n\r\n        Log.i(\"digit\",digit);\r\n        Log.i(\"url\",videoUrl);\r\n\r\n\r\n\r\n        initTTS();\r\n        initSTT();\r\n        setButtonClick();\r\n        setBasicUiElement();\r\n\r\n        try {\r\n            initTTS_helper();\r\n        } catch (ExecutionException e) {\r\n            e.printStackTrace();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        initMediaPlayer();\r\n       // initYouTube();\r\n        binding.toolBar.imageViewBack.setOnClickListener(v->{\r\n            onBackPressed();\r\n        });\r\n        //TODO: To be turned on\r\n        binding.playPause.setEnabled(false);\r\n        initProcess();\r\n\r\n\r\n\r\n\r\n        checkProgressData();\r\n\r\n\r\n    }\r\n    private void checkProgressData() {\r\n        progressData=UtilityFunctions.checkProgressAvailable(progressDataBase,\"Mathematics\"+subject,selectedSub,new Date(),0,true);\r\n\r\n        try{\r\n            if (progressData!=null){\r\n                timeSpend=progressData.get(0).time_spend;\r\n            }\r\n\r\n        }catch (Exception e){}\r\n\r\n    }\r\n\r\n\r\n    private void timer(){\r\n        isTimerRunning=false;\r\n        observable.interval(60, TimeUnit.SECONDS)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .doOnNext(new Consumer<Long>() {\r\n                    public void accept(Long x) throws Exception {\r\n                        // update your view here\r\n\r\n                        binding.timerProgress.setMax(15);\r\n                        binding.timerProgress.setProgress(Integer.parseInt((x+1)+\"\"));\r\n                        binding.timeText.setText((x+1)+\"\");\r\n                        Log.i(\"task\",x+\"\");\r\n                    }\r\n                })\r\n                .takeUntil(aLong -> aLong == TIMER_VALUE)\r\n                .doOnComplete(() ->\r\n                        // do whatever you need on complete\r\n                        Log.i(\"TSK\",\"task\")\r\n                ).subscribe();\r\n\r\n\r\n    }\r\n    private void initMediaPlayer() {\r\n        mediaPlayer = UtilityFunctions.playClapSound(this);\r\n    }\r\n\r\n    private void initYouTube() {\r\n\r\n        ytPlayer.initialize(api_key, this);\r\n        playerStateChangeListener = new YouTubePlayer.PlayerStateChangeListener() {\r\n            @Override\r\n            public void onLoading() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onLoaded(String s) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onAdStarted() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onVideoStarted() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onVideoEnded() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(YouTubePlayer.ErrorReason errorReason) {\r\n\r\n            }\r\n        };\r\n\r\n        playbackEventListener = new YouTubePlayer.PlaybackEventListener() {\r\n            @Override\r\n            public void onPlaying() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPaused() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onStopped() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onBuffering(boolean b) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onSeekTo(int i) {\r\n\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        try{\r\n        tts.initialize(\" \",LearningActivity.this);\r\n            tts.shutdown();\r\n        }catch (Exception e){}\r\n\r\n    }\r\n\r\n    private void displayHintDialog(String answer) {\r\n\r\n        HintDialog hintDialog = new HintDialog(LearningActivity.this);\r\n        hintDialog.setCancelable(false);\r\n        hintDialog.setAlertTitle(\"HINT\");\r\n        hintDialog.setAlertDesciption(answer);\r\n\r\n        hintDialog.setOnActionListener(viewId->{\r\n\r\n            switch (viewId.getId()){\r\n\r\n                case R.id.closeButton:\r\n                    hintDialog.dismiss();\r\n                    isCallTTS=true;\r\n                    break;\r\n\r\n\r\n            }\r\n        });\r\n\r\n        hintDialog.show();\r\n\r\n    }\r\n\r\n\r\n\r\n    private void displayCompleteDialog() {\r\n\r\n        HintDialog hintDialog = new HintDialog(LearningActivity.this);\r\n        hintDialog.setCancelable(false);\r\n        hintDialog.setAlertTitle(\"Woohoo!!\");\r\n        hintDialog.setAlertDesciption(\"Hey, you completed practice successfully !!\\nNow you can proceed to take test.\");\r\n\r\n        hintDialog.actionButton(\"START TEST\");\r\n        hintDialog.actionButtonBackgroundColor(R.color.primary);\r\n        hintDialog.setOnActionListener(viewId->{\r\n\r\n            switch (viewId.getId()){\r\n\r\n                case R.id.closeButton:\r\n                    hintDialog.dismiss();\r\n                    isCallTTS=true;\r\n                    break;\r\n                case R.id.buttonAction:\r\n                    goToTest();\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        hintDialog.show();\r\n\r\n    }\r\n\r\n    private void setToolbar() {\r\n\r\n       binding.toolBar.imageViewBack.setImageDrawable(getDrawable(R.drawable.ic_baseline_arrow_back_24));\r\n\r\n        binding.toolBar.getRoot().inflateMenu(R.menu.log_menu);\r\n        binding.toolBar.getRoot().setOnMenuItemClickListener(item -> {\r\n\r\n            switch (item.getItemId()) {\r\n                case R.id.action_log:\r\n                    startActivity(new Intent(getApplicationContext(), LogActivity.class));\r\n\r\n                    return true;\r\n                default:\r\n                    return super.onOptionsItemSelected(item);\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setQuestion() throws InterruptedException {\r\n\r\n        UtilityFunctions.unMuteAudioStream(LearningActivity.this);\r\n        binding.ansTextView.setBackgroundTintList(ContextCompat.getColorStateList(LearningActivity.this, R.color.green));\r\n        binding.ansTextView.setEnabled(true);\r\n        isAnswered = false;\r\n\r\n        if (isCallTTS) {\r\n            int maxVal = 20;\r\n            int minVal = 2;\r\n            if (digit.equals(\"2\")) {\r\n                maxVal = 99;\r\n                minVal = 10;\r\n            }\r\n\r\n            if (digit.equals(\"3\")) {\r\n                maxVal = 999;\r\n                minVal = 100;\r\n\r\n            }\r\n            if (digit.equals(\"4\")) {\r\n                maxVal = 9999;\r\n                minVal = 1000;\r\n\r\n            }\r\n\r\n\r\n            if (isNewQuestionGenerated) {\r\n                if (digit.equals(\"1\")) {\r\n                    currentNum1 = UtilityFunctions.getRandomNumber(Integer.parseInt(digit.trim()));\r\n                    currentNum2 = UtilityFunctions.getRandomNumber(Integer.parseInt(digit.trim()));\r\n                } else {\r\n                    currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal, minVal);\r\n                    currentNum2 = UtilityFunctions.getRandomIntegerUpto(maxVal, minVal);\r\n                }\r\n\r\n                if (subject.equals(\"subtraction\")) {\r\n                    if (currentNum1 < currentNum2) {\r\n                        int temp = currentNum1;\r\n                        currentNum1 = currentNum2;\r\n                        currentNum2 = temp;\r\n                    }\r\n                }\r\n                if (subject.equals(\"division\")) {\r\n                    currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal, minVal);\r\n                    currentNum2 = UtilityFunctions.getRandomIntegerUpto(9, 2);\r\n                    while (!UtilityFunctions.isDivisible(currentNum1, currentNum2)) {\r\n                        currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal, minVal);\r\n                    }\r\n                }\r\n\r\n                if (subject.equals(\"multiplication\")) {\r\n                    currentNum1 = Integer.parseInt(digit);\r\n                    currentNum2 = currentQuestion;\r\n                }\r\n            }\r\n            logs += \"Question :\" + currentNum1 + binding.operator.getText() + \"\" + currentNum2 + \"=?\\n\";\r\n            digit1Text.setText(currentNum1 + \"\");\r\n            binding.digitTwo.setText(currentNum2 + \"\");\r\n            binding.progress.setText(currentQuestion + \"/ \" + MAX_QUESTION);\r\n            binding.ansTextView.setText(\"?\");\r\n            currentAnswer = MathsHelper.getMathResult(subject, currentNum1, currentNum2);\r\n\r\n\r\n            isCallSTT = true;\r\n            tts.initialize(MathsHelper.getMathQuestion(subject, currentNum1, currentNum2), this);\r\n            binding.animWoman.playAnimation();\r\n            isNewQuestionGenerated = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private void play() {\r\n\r\n        if (isTimerRunning)\r\n            timer();\r\n\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n        binding.playPause.setChecked(true);\r\n        isCallTTS = true;\r\n        try {\r\n            setQuestion();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void pause() {\r\n        binding.animationVoice.setVisibility(View.GONE);\r\n        binding.questionProgress.setProgress(0);\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n\r\n        binding.animWoman.pauseAnimation();\r\n        binding.animWoman.cancelAnimation();\r\n//        UtilityFunctions.runOnUiThread(()->{\r\n//            tts.stop();\r\n//        },50);\r\n\r\n        isCallSTT = false;\r\n        isCallTTS = false;\r\n        if (!isAnswered)\r\n            isNewQuestionGenerated = false;\r\n    }\r\n\r\n    private void setButtonClick() {\r\n        binding.playPause.setOnClickListener(v -> {\r\n            if (binding.playPause.isChecked()) {\r\n                //  binding.hintButton.setVisibility(View.VISIBLE);\r\n                play();\r\n            } else {\r\n                pause();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setBasicUiElement() {\r\n\r\n        // binding.toolBar.titleText.setText(\"Learn \"+ subject.substring(0, 1).toUpperCase() + subject.substring(1));\r\n        binding.toolBar.titleText.setText(selectedSub);\r\n        // binding.subSub.setText(digit+\" Digit \"+subject.substring(0, 1).toUpperCase() + subject.substring(1));\r\n\r\n        binding.ansTextView.setOnEditorActionListener(editorActionListener);\r\n        binding.ansTextView.setEnabled(false);\r\n\r\n        myFadeInAnimation = AnimationUtils.loadAnimation(LearningActivity.this, R.anim.blink);\r\n\r\n        binding.ansTextView.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (hasFocus) {\r\n\r\n                    UtilityFunctions.runOnUiThread(()->{binding.ansTextView.setText(\"\");},100);\r\n\r\n                    binding.indicator.setVisibility(View.INVISIBLE);\r\n                    binding.indicator.clearAnimation();\r\n                    pause();\r\n                    stt.destroy();\r\n                } else {\r\n                    //lost focus\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.ansTextView.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n\r\n//                if (binding.ansTextView.getText().toString().equals(currentAnswer+\"\")){\r\n//\r\n//                    UtilityFunctions.runOnUiThread(()->{\r\n//                        isCallTTS = true;\r\n//                        initSTT();\r\n//                        isNewQuestionGenerated = true;\r\n//                        justifyAns(binding.ansTextView.getText().toString());\r\n//                        binding.ansTextView.clearFocus();\r\n//                        InputMethodManager imm = (InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n//                        imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0);\r\n//                    },100);\r\n//\r\n//                }\r\n            }\r\n        });\r\n\r\n\r\n        if (subject.equals(\"addition\")) {\r\n            binding.operator.setText(\"+\");\r\n            binding.digitOneH.setVisibility(View.VISIBLE);\r\n            binding.digitOne.setVisibility(View.INVISIBLE);\r\n\r\n            digit1Text = binding.digitOneH;\r\n\r\n        } else if (subject.equals(\"subtraction\")) {\r\n            binding.operator.setText(\"-\");\r\n            binding.digitOneH.setVisibility(View.VISIBLE);\r\n            binding.digitOne.setVisibility(View.INVISIBLE);\r\n            digit1Text = binding.digitOneH;\r\n        } else if (subject.equals(\"multiplication\")) {\r\n            binding.operator.setText(\"×\");\r\n            //   binding.subSub.setText(\"Multiplication upto \"+digit +\"'s Table\");\r\n            digit1Text = binding.digitOne;\r\n\r\n        } else if (subject.equals(\"division\")) {\r\n            binding.operator.setText(\"÷\");\r\n            digit1Text = binding.digitOne;\r\n        }\r\n\r\n//        binding.learnOrTest.setOnClickListener(v->{\r\n//            Intent intent =new Intent(getApplicationContext(), AdditionActivity.class);\r\n//            intent.putExtra(\"subject\",subject);\r\n//            intent.putExtra(\"max_digit\", digit);\r\n//            startActivity(intent);\r\n//        });\r\n\r\n\r\n        binding.hintButton.setOnClickListener(v -> {\r\n            pause();\r\n            binding.playPause.setChecked(false);\r\n            displayHintDialog(\"The answer is \" + currentAnswer);\r\n        });\r\n\r\n        binding.playVideoLayout.setOnClickListener(view -> {\r\n\r\n            if (!subject.equals(\"multiplication\"))\r\n                displayVideoDialog();\r\n\r\n\r\n        });\r\n\r\n\r\n        binding.giveTestButton.setOnClickListener(v->{\r\n            goToTest();\r\n        });\r\n\r\n\r\n        if (subject.equals(\"multiplication\"))\r\n            binding.playVideoLayout.setVisibility(View.INVISIBLE);\r\n\r\n\r\n\r\n    }\r\n\r\n    private void goToTest(){\r\n        Intent intent =new Intent(getApplicationContext(), AdditionActivity.class);\r\n        intent.putExtra(\"subject\",subject);\r\n        intent.putExtra(\"max_digit\", digit);\r\n        intent.putExtra(\"video_url\",videoUrl);\r\n        intent.putExtra(\"selected_sub\",selectedSub);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void displayVideoDialog() {\r\n        final AlertDialog.Builder alert = new AlertDialog.Builder(LearningActivity.this);\r\n        View mView = getLayoutInflater().inflate(R.layout.video_dialog, null);\r\n\r\n\r\n        ytPlayer = mView.findViewById(R.id.videoView);\r\n        ImageView closeButton = mView.findViewById(R.id.closeButton);\r\n        initYouTube();\r\n\r\n//        ytPlayer.initialize(\r\n//                api_key,\r\n//                new YouTubePlayer.OnInitializedListener() {\r\n//                    // Implement two methods by clicking on red\r\n//                    // error bulb inside onInitializationSuccess\r\n//                    // method add the video link or the playlist\r\n//                    // link that you want to play In here we\r\n//                    // also handle the play and pause\r\n//                    // functionality\r\n//                    @Override\r\n//                    public void onInitializationSuccess(\r\n//                            YouTubePlayer.Provider provider,\r\n//                            YouTubePlayer youTubePlayer, boolean b)\r\n//                    {\r\n//                        youTubePlayer.loadVideo(\"HzeK7g8cD0Y\");\r\n//                        youTubePlayer.play();\r\n//                    }\r\n//\r\n//                    // Inside onInitializationFailure\r\n//                    // implement the failure functionality\r\n//                    // Here we will show toast\r\n//                    @Override\r\n//                    public void onInitializationFailure(YouTubePlayer.Provider provider,\r\n//                                                        YouTubeInitializationResult\r\n//                                                                youTubeInitializationResult)\r\n//                    {\r\n//                        Toast.makeText(getApplicationContext(), \"Video player Failed\", Toast.LENGTH_SHORT).show();\r\n//                    }\r\n//                });\r\n\r\n        alert.setView(mView);\r\n        final AlertDialog alertDialog = alert.create();\r\n        alertDialog.setCancelable(true);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n\r\n        try {\r\n            alertDialog.show();\r\n        } catch (Exception e) {\r\n\r\n        }\r\n\r\n        closeButton.setOnClickListener(v -> alertDialog.dismiss());\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onSaveInstanceState(@NonNull Bundle outState) {\r\n        super.onSaveInstanceState(outState);\r\n\r\n        outState.putString(\"digit\", digit);\r\n        outState.putString(\"video_url\", videoUrl);\r\n        outState.putString(\"subject\", subject);\r\n        outState.putString(\"selected_sub\", selectedSub);\r\n    }\r\n\r\n    @Override\r\n    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {\r\n        super.onRestoreInstanceState(savedInstanceState);\r\n\r\n\r\n        digit = savedInstanceState.getString(\"digit\");\r\n        videoUrl = savedInstanceState.getString(\"videoUrl\");\r\n        subject = savedInstanceState.getString(\"subject\");\r\n        selectedSub = savedInstanceState.getString(\"selected_sub\");\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialize TTS engine\r\n     * Answer will be check here\r\n     */\r\n    private void initTTS() {\r\n        tts = TextToSpeechBuilder.builder(new ConversionCallback() {\r\n            @Override\r\n            public void onCompletion() {\r\n\r\n\r\n                if (isCallSTT && isCallTTS) {\r\n                    Log.i(\"inSideTTS\", \"InitSST\");\r\n                    UtilityFunctions.runOnUiThread(() -> {\r\n\r\n                        //  speakAnswer();\r\n                        startTime = new Date().getTime();\r\n                        UtilityFunctions.muteAudioStream(LearningActivity.this);\r\n\r\n                        isCallSTT = false;\r\n                        isAnsByTyping = false;\r\n                        binding.animWoman.cancelAnimation();\r\n                        stt.initialize(\"\", LearningActivity.this);\r\n                        binding.animationVoice.setVisibility(View.VISIBLE);\r\n                    }, DELAY_ON_STARTING_STT);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n                UtilityFunctions.simpleToast(LearningActivity.this, errorMessage);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private void resetViews() {\r\n        binding.playPause.setChecked(false);\r\n        isCallSTT = false;\r\n        isCallTTS = false;\r\n        currentQuestion = 1;\r\n        mediaPlayer.pause();\r\n        binding.animWoman.cancelAnimation();\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n        binding.progress.setText(\"1/10\");\r\n        displayCompleteDialog();\r\n    }\r\n\r\n\r\n    private void initTTS_helper() throws ExecutionException, InterruptedException {\r\n        ttsHelper = new TTSHelperAsyncTask().execute(new ConversionCallback[]{new ConversionCallback() {\r\n            @Override\r\n            public void onCompletion() {\r\n\r\n\r\n                UtilityFunctions.runOnUiThread(() -> {\r\n                    play();\r\n                }, 10);\r\n\r\n                binding.playPause.setEnabled(true);\r\n                binding.animWoman.cancelAnimation();\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n\r\n                ttsHelper.destroy();\r\n            }\r\n        }}).get();\r\n    }\r\n\r\n    //TODO: Must be turn on\r\n    private void initProcess() {\r\n\r\n        ttsHelper.initialize(\"Lets learn \" + selectedSub.split(\"\\\\(\")[0] + \" , you can speak and write answer in the answer box\", LearningActivity.this);\r\n        // play();\r\n        binding.animWoman.playAnimation();\r\n\r\n    }\r\n\r\n    /**\r\n     * Initialize STT engine\r\n     * Answer will be check here\r\n     */\r\n\r\n    private TextView.OnEditorActionListener editorActionListener = (textView, i, keyEvent) -> {\r\n\r\n        switch (i) {\r\n            case EditorInfo.IME_ACTION_DONE:\r\n                if (!binding.digitTwo.getText().toString().equals(\"?\")) {\r\n                    isCallTTS = true;\r\n                    try{\r\n                        initSTT();\r\n                    }catch (Exception e){}\r\n\r\n                    if (!binding.playPause.isChecked())\r\n                        binding.playPause.setChecked(true);\r\n                    isNewQuestionGenerated = true;\r\n                    justifyAns(binding.ansTextView.getText().toString());\r\n                    binding.ansTextView.clearFocus();\r\n                }\r\n                break;\r\n        }\r\n        return false;\r\n\r\n    };\r\n\r\n\r\n    private void initSTT() {\r\n        stt = SpeechToTextBuilder.builder(new ConversionCallback() {\r\n            @RequiresApi(api = Build.VERSION_CODES.O)\r\n            @Override\r\n            public void onSuccess(String result) {\r\n\r\n                Log.i(TAG, \"On Succcess\" + result);\r\n                successResultCalling(result);\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCompletion() {\r\n                Log.d(TAG, \"onCompletion: Done\");\r\n                binding.animationVoice.setVisibility(View.GONE);\r\n            }\r\n\r\n            @Override\r\n            public void getLogResult(String title) {\r\n                Log.i(\"INLOG\", title);\r\n                ConversionCallback.super.getLogResult(title);\r\n                logs += title + \"\\n\";\r\n            }\r\n\r\n            @RequiresApi(api = Build.VERSION_CODES.O)\r\n            @Override\r\n            public void getStringResult(String title) throws JSONException {\r\n                ConversionCallback.super.getStringResult(title);\r\n                Log.i(\"SoundXCalled\", title + \",title: \" + Soundex.getCode(title) + \", ans:\" + Soundex.getCode(UtilityFunctions.numberToWords(currentAnswer)));\r\n                if (Soundex.getCode(title).equals(Soundex.getCode(UtilityFunctions.numberToWords(currentAnswer)))) {\r\n                    successResultCalling(currentAnswer + \"\");\r\n                } else {\r\n                    // Changes\r\n                    try {\r\n                        UtilityFunctions.runOnUiThread(() -> {\r\n                            isCallSTT = true;\r\n                            tts.initialize(\"\", LearningActivity.this);\r\n                        }, 250);\r\n                    } catch (Exception e) {\r\n                        Log.i(TAG, \"Inside String res\");\r\n                        pause();\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n\r\n                Log.i(TAG, \"Inside err\" + errorMessage);\r\n                if (errorMessage.equals(\"No match\")) {\r\n                    try {\r\n                        UtilityFunctions.runOnUiThread(() -> {\r\n                            isCallSTT = true;\r\n                            tts.initialize(\"\", LearningActivity.this);\r\n                        }, 250);\r\n\r\n                    } catch (Exception e) {\r\n                        Log.i(TAG, \"Inside err\");\r\n                        pause();\r\n                    }\r\n                } else {\r\n\r\n                    Log.i(TAG, \"InsideErrElse\" + errorMessage + isCallSTT + isCallTTS + isAnsByTyping);\r\n                    // binding.playPause.setChecked(false);\r\n                    //pause();\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    private void justifyAns(String result) {\r\n        binding.indicator.setVisibility(View.INVISIBLE);\r\n        binding.indicator.clearAnimation();\r\n\r\n        binding.ansTextView.setBackgroundTintList(ContextCompat.getColorStateList(LearningActivity.this, R.color.green));\r\n        isAnswered = true;\r\n        try {\r\n            UtilityFunctions.unMuteAudioStream(LearningActivity.this);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //stt.stop();\r\n        binding.ansTextView.setText(result);\r\n        isCallSTT = false;\r\n        Boolean lcsResult = new UtilityFunctions().matchingSeq(result.trim(), currentAnswer + \"\");\r\n\r\n\r\n        endTime = new Date().getTime();\r\n        binding.animWoman.playAnimation();\r\n        if (lcsResult) {\r\n            tts.initialize(UtilityFunctions.getCompliment(true), LearningActivity.this);\r\n            mediaPlayer.start();\r\n            //TODO: PLACE CORRECT KIDS DATA\r\n            UtilityFunctions.sendDataToAnalytics(analytics, auth.getCurrentUser().getUid().toString(), \"kidsid_default\", \"Name_default\",\r\n                    \"Mathematics-Practice-\" + subject, 22, currentAnswer + \"\", result, true, (int) (endTime - startTime),\r\n                    currentNum1 + \"\" + binding.operator.getText() + \"\" + currentNum2 + \"=?\", \"maths\");\r\n            logs += \"Tag: Correct\\n\" + \"Time Taken: \" + UtilityFunctions.formatTime(endTime - startTime) + \"\\n\";\r\n            DELAY_ON_STARTING_STT = 500;\r\n\r\n            DELAY_ON_SETTING_QUESTION = 2000;\r\n            correctAnswer++;\r\n            attempt = 3;\r\n\r\n            setNewQuestion();\r\n\r\n        } else {\r\n\r\n            binding.ansTextView.setBackgroundTintList(ContextCompat.getColorStateList(LearningActivity.this, R.color.red));\r\n\r\n            if (attempt > 0) {\r\n                binding.indicator.setVisibility(View.VISIBLE);\r\n                binding.indicator.setAnimation(myFadeInAnimation);\r\n                attempt--;\r\n                isCallSTT = true;\r\n                tts.initialize(UtilityFunctions.getCompliment(false), LearningActivity.this);\r\n            } else {\r\n                //TODO: PLACE CORRECT KIDS DATA\r\n                tts.initialize(\"Wrong Answer and the correct answer is \" + currentAnswer, LearningActivity.this);\r\n                UtilityFunctions.sendDataToAnalytics(analytics, auth.getCurrentUser().getUid().toString(), \"kidsid_default\", \"Name_default\",\r\n                        \"Mathematics-Practice-\" + subject, 22, currentAnswer + \"\", result, false, (int) (endTime - startTime),\r\n                        currentNum1 + \"\" + binding.operator.getText() + \"\" + currentNum2 + \"=?\", \"maths\");\r\n                logs += \"Tag: Wrong\\n\" + \"Time Taken: \" + UtilityFunctions.formatTime(endTime - startTime) + \"\\n\";\r\n                DELAY_ON_STARTING_STT = 1800;\r\n                DELAY_ON_SETTING_QUESTION = 3000;\r\n                wrongAnswer++;\r\n                attempt = 3;\r\n                isCallTTS = true;\r\n                setNewQuestion();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    private void successResultCalling(String result) {\r\n\r\n        Log.d(TAG, \"onSuccess: \" + result);\r\n\r\n        justifyAns(result);\r\n\r\n    }\r\n\r\n    private void setNewQuestion() {\r\n        currentQuestion++;\r\n        if (currentQuestion <= MAX_QUESTION) {\r\n\r\n            UtilityFunctions.runOnUiThread(() -> {\r\n                try {\r\n                    mediaPlayer.pause();\r\n                    setQuestion();\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }, DELAY_ON_SETTING_QUESTION);\r\n        } else {\r\n            resetViews();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        Log.i(\"OnStop\", \"OnStop\");\r\n        if (tts!=null) {\r\n            tts.stop();\r\n            tts.destroy();\r\n        }\r\n        if (ttsHelper!=null)\r\n            ttsHelper.destroy();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n\r\n        pause();\r\n        Log.i(\"OnPause\", \"OnPause\");\r\n        tts.destroy();\r\n        stt.destroy();\r\n        try {\r\n            UtilityFunctions.runOnUiThread(()->{tts.stop();},10);\r\n            tts.shutdown();\r\n            tts.initialize(\" \", LearningActivity.this);\r\n        } catch (Exception e) {\r\n\r\n\r\n        }\r\n        checkLogIsEnable();\r\n        binding.animWoman.pauseAnimation();\r\n        try {\r\n            UtilityFunctions.unMuteAudioStream(LearningActivity.this);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        UtilityFunctions.checkProgressAvailable(progressDataBase,\"Mathematics\"+subject,selectedSub,new Date(),\r\n                timeSpend+Integer.parseInt(binding.timeText.getText().toString()),false);\r\n\r\n        super.onPause();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        isCallTTS = true;\r\n        initSTT();\r\n        initTTS();\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n\r\n        tts.destroy();\r\n        stt.destroy();\r\n        try {\r\n            UtilityFunctions.unMuteAudioStream(LearningActivity.this);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        super.onDestroy();\r\n    }\r\n\r\n\r\n    private void checkLogIsEnable() {\r\n        if (PrefConfig.readIdInPref(getApplicationContext(), \"IS_LOG_ENABLE\").equals(\"true\"))\r\n            saveLog();\r\n    }\r\n\r\n    private void saveLog() {\r\n        Log.d(TAG, \"saveLog: Called \" + logs);\r\n        UtilityFunctions.saveLog(logDatabase, logs);\r\n    }\r\n\r\n    @Override\r\n    public void onInitializationSuccess(YouTubePlayer.Provider provider, YouTubePlayer youTubePlayer, boolean b) {\r\n\r\n        youTubePlayer.setPlayerStateChangeListener(playerStateChangeListener);\r\n        if (!b) {\r\n            //youTubePlayer.cueVideo(\"EaXUuwz_caU\"); //Start NO automatically the video\r\n            youTubePlayer.loadVideo(videoUrl.split(\"/\")[3]);//Execute a playlist\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onInitializationFailure(YouTubePlayer.Provider provider, YouTubeInitializationResult youTubeInitializationResult) {\r\n\r\n    }\r\n\r\n\r\n    static class TTSHelperAsyncTask extends AsyncTask<ConversionCallback, Void, TextToSpeckConverter> {\r\n        @Override\r\n        protected TextToSpeckConverter doInBackground(ConversionCallback... conversionCallbacks) {\r\n            return TextToSpeechBuilder.builder(conversionCallbacks[0]);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java b/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java
--- a/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java	(revision 23509c1201be810b923936d5fa7c8ff71cc75432)
+++ b/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java	(date 1662182998017)
@@ -161,7 +161,7 @@
             onBackPressed();
         });
         //TODO: To be turned on
-        binding.playPause.setEnabled(false);
+//        binding.playPause.setEnabled(false);
         initProcess();
 
 
@@ -463,6 +463,9 @@
 //            tts.stop();
 //        },50);
 
+        if(ttsHelper!=null)
+            ttsHelper.destroy();
+
         isCallSTT = false;
         isCallTTS = false;
         if (!isAnswered)
@@ -744,7 +747,7 @@
                     play();
                 }, 10);
 
-                binding.playPause.setEnabled(true);
+
                 binding.animWoman.cancelAnimation();
             }
 
@@ -761,6 +764,7 @@
 
         ttsHelper.initialize("Lets learn " + selectedSub.split("\\(")[0] + " , you can speak and write answer in the answer box", LearningActivity.this);
         // play();
+        binding.playPause.setChecked(true);
         binding.animWoman.playAnimation();
 
     }
