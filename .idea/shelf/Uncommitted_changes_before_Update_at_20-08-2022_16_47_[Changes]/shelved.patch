Index: app/src/main/java/com/maths/beyond_school_280720220930/AdditionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.maths.beyond_school_280720220930;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport com.google.firebase.analytics.FirebaseAnalytics;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.maths.beyond_school_280720220930.SP.PrefConfig;\r\nimport com.maths.beyond_school_280720220930.database.log.LogDatabase;\r\nimport com.maths.beyond_school_280720220930.databinding.ActivityAdditionBinding;\r\nimport com.maths.beyond_school_280720220930.subjects.MathsHelper;\r\nimport com.maths.beyond_school_280720220930.translation_engine.ConversionCallback;\r\nimport com.maths.beyond_school_280720220930.translation_engine.SpeechToTextBuilder;\r\nimport com.maths.beyond_school_280720220930.translation_engine.TextToSpeechBuilder;\r\nimport com.maths.beyond_school_280720220930.translation_engine.translator.SpeechToTextConverter;\r\nimport com.maths.beyond_school_280720220930.translation_engine.translator.TextToSpeckConverter;\r\nimport com.maths.beyond_school_280720220930.utils.UtilityFunctions;\r\n\r\nimport java.util.Date;\r\n\r\npublic class AdditionActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = AdditionActivity.class.getSimpleName();\r\n    private ActivityAdditionBinding binding;\r\n    private int currentAnswer;\r\n    private int currentQuestion = 1;\r\n    private int correctAnswer = 0;\r\n    private int wrongAnswer = 0;\r\n    private final int MAX_QUESTION = 10;\r\n    private int DELAY_ON_STARTING_STT = 500;\r\n    private int DELAY_ON_SETTING_QUESTION = 3000;\r\n    private TextToSpeckConverter tts;\r\n    private SpeechToTextConverter stt;\r\n    private Boolean isCallSTT = false;\r\n    private Boolean isCallTTS = true;\r\n    private Boolean isNewQuestionGenerated = true;\r\n    private Boolean isAnswered = false;\r\n    private Toolbar toolbar;\r\n\r\n    private TextView digit1Text;\r\n    private String subject = \"\";\r\n    private String digit = \"\",videoUrl=\"\",selectedSub=\"\";\r\n\r\n    private LogDatabase logDatabase;\r\n    private FirebaseAnalytics analytics;\r\n    private FirebaseAuth auth;\r\n    private long startTime = 0, endTime = 0,diff=0;\r\n    private String logs = \"\";\r\n    private int currentNum1=0 ;\r\n    private int currentNum2=0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        binding = ActivityAdditionBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setToolbar();\r\n\r\n        binding.toolBar.titleText.setText(\"Addition\");\r\n        subject = getIntent().getStringExtra(\"subject\");\r\n        digit = getIntent().getStringExtra(\"max_digit\");\r\n        videoUrl=getIntent().getStringExtra(\"video_url\");\r\n        selectedSub=getIntent().getStringExtra(\"selected_sub\");\r\n\r\n        logDatabase = LogDatabase.getDbInstance(this);\r\n        analytics = FirebaseAnalytics.getInstance(getApplicationContext());\r\n        auth = FirebaseAuth.getInstance();\r\n\r\n        initTTS();\r\n        initSTT();\r\n        setButtonClick();\r\n        setBasicUiElement();\r\n        binding.toolBar.imageViewBack.setOnClickListener(v -> {\r\n            onBackPressed();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void setBasicUiElement() {\r\n\r\n        // binding.toolBar.titleText.setText(\"Learn \"+ subject.substring(0, 1).toUpperCase() + subject.substring(1));\r\n        binding.toolBar.titleText.setText(selectedSub);\r\n        // binding.subSub.setText(digit+\" Digit \"+subject.substring(0, 1).toUpperCase() + subject.substring(1));\r\n        if (subject.equals(\"addition\")){\r\n            binding.operator.setText(\"+\");\r\n            binding.digitOneH.setVisibility(View.VISIBLE);\r\n            binding.digitOne.setVisibility(View.INVISIBLE);\r\n\r\n            digit1Text=binding.digitOneH;\r\n\r\n        }\r\n\r\n\r\n        else if (subject.equals(\"subtraction\")){\r\n            binding.operator.setText(\"-\");\r\n            binding.digitOneH.setVisibility(View.VISIBLE);\r\n            binding.digitOne.setVisibility(View.INVISIBLE);\r\n            digit1Text=binding.digitOneH;\r\n        }\r\n\r\n\r\n        else if (subject.equals(\"multiplication\")){\r\n            binding.operator.setText(\"ร\");\r\n            //   binding.subSub.setText(\"Multiplication upto \"+digit +\"'s Table\");\r\n            digit1Text=binding.digitOne;\r\n\r\n        }\r\n\r\n\r\n        else if (subject.equals(\"division\")){\r\n            binding.operator.setText(\"รท\");\r\n            digit1Text=binding.digitOne;\r\n        }\r\n\r\n\r\n\r\n//        binding.learnOrTest.setOnClickListener(v->{\r\n//            Intent intent =new Intent(getApplicationContext(), AdditionActivity.class);\r\n//            intent.putExtra(\"subject\",subject);\r\n//            intent.putExtra(\"max_digit\", digit);\r\n//            startActivity(intent);\r\n//        });\r\n\r\n\r\n\r\n        binding.learnOrTest.setOnClickListener(v->{\r\n            Intent intent =new Intent(getApplicationContext(), LearningActivity.class);\r\n            intent.putExtra(\"subject\",subject);\r\n            intent.putExtra(\"max_digit\", digit);\r\n            intent.putExtra(\"video_url\",videoUrl);\r\n            intent.putExtra(\"selected_sub\",selectedSub);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n\r\n    }\r\n    /**\r\n     * Initialize TTS engine\r\n     * Answer will be check here\r\n     */\r\n    private void initTTS() {\r\n        tts = TextToSpeechBuilder.builder(new ConversionCallback() {\r\n            @Override\r\n            public void onCompletion() {\r\n                if (isCallSTT && isCallTTS) {\r\n                    Log.i(\"inSideTTS\", \"InitSST\");\r\n                    UtilityFunctions.runOnUiThread(() -> {\r\n                        startTime=new Date().getTime();\r\n                        UtilityFunctions.muteAudioStream(AdditionActivity.this);\r\n                        isCallSTT = false;\r\n                        stt.initialize(\"\", AdditionActivity.this);\r\n                        binding.animationVoice.setVisibility(View.VISIBLE);\r\n                    }, DELAY_ON_STARTING_STT);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n                UtilityFunctions.simpleToast(AdditionActivity.this, errorMessage);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Initialize STT engine\r\n     * Answer will be check here\r\n     */\r\n    private void initSTT() {\r\n        stt = SpeechToTextBuilder.builder(new ConversionCallback() {\r\n            @RequiresApi(api = Build.VERSION_CODES.O)\r\n            @Override\r\n            public void onSuccess(String result) {\r\n                Log.d(TAG, \"onSuccess: \" + result);\r\n\r\n\r\n                endTime=new Date().getTime();\r\n\r\n                try {\r\n                    UtilityFunctions.unMuteAudioStream(AdditionActivity.this);\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                logs+=\"Detected Result\"+result+\"\\n\";\r\n\r\n                //stt.stop();\r\n                binding.ansTextView.setText(result);\r\n                isCallSTT = false;\r\n                Boolean lcsResult = new UtilityFunctions().matchingSeq(result.trim(), currentAnswer + \"\");\r\n\r\n\r\n\r\n                if (lcsResult) {\r\n\r\n                    diff=endTime-startTime;\r\n\r\n                    tts.initialize(\"Correct Answer\", AdditionActivity.this);\r\n                    logs+=\"Tag: Correct\\n\" +\"Time Taken: \"+UtilityFunctions.formatTime(diff)+\"\\n\";\r\n\r\n\r\n                    UtilityFunctions.sendDataToAnalytics(analytics, auth.getCurrentUser().getUid().toString(), \"kidsid_default\", \"Name_default\",\r\n                            \"Mathematics-Test-\"+ subject, 22,currentAnswer+\"\", result, true, (int) (diff),\r\n                            currentNum1+\"\"+binding.operator.getText()+\"\"+currentNum2+\"=?\",\"maths\");\r\n\r\n                    DELAY_ON_STARTING_STT = 500;\r\n                    DELAY_ON_SETTING_QUESTION=2000;\r\n                    correctAnswer++;\r\n                } else {\r\n\r\n                    logs+=\"Tag: Wrong\\n\"+\"Time Taken: \"+UtilityFunctions.formatTime(diff)+\"\\n\";\r\n                    tts.initialize(\"Wrong Answer\", AdditionActivity.this);\r\n\r\n                    UtilityFunctions.sendDataToAnalytics(analytics, auth.getCurrentUser().getUid().toString(), \"kidsid_default\", \"Name_default\",\r\n                            \"Mathematics-Test-\"+ subject, 22,currentAnswer+\"\", result, false, (int) (diff),\r\n                            currentNum1+\"\"+binding.operator.getText()+\"\"+currentNum2+\"=?\",\"maths\");\r\n                    DELAY_ON_STARTING_STT = 500;\r\n                    DELAY_ON_SETTING_QUESTION=2000;\r\n                    wrongAnswer++;\r\n                }\r\n                setWrongCorrectView();\r\n                currentQuestion++;\r\n                if (currentQuestion <= MAX_QUESTION) {\r\n\r\n                    UtilityFunctions.runOnUiThread(() -> {\r\n                        try {\r\n                            setQuestion();\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }, DELAY_ON_SETTING_QUESTION);\r\n                } else {\r\n                    resetViews();\r\n                }\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCompletion() {\r\n                Log.d(TAG, \"onCompletion: Done\");\r\n                binding.animationVoice.setVisibility(View.GONE);\r\n            }\r\n\r\n            @Override\r\n            public void getLogResult(String title) {\r\n                ConversionCallback.super.getLogResult(title);\r\n                logs+=title+\"\\n\";\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n                UtilityFunctions.runOnUiThread(()->{\r\n                    isCallSTT = true;\r\n                    tts.initialize(\"\", AdditionActivity.this);\r\n                },250);\r\n\r\n                //  stt.initialize(\"\", AdditionActivity.this);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setWrongCorrectView() {\r\n        binding.wrongText.setText(String.valueOf(wrongAnswer));\r\n        binding.correctText.setText(String.valueOf(correctAnswer));\r\n    }\r\n\r\n    private void resetViews() {\r\n        binding.playPause.setChecked(false);\r\n        isCallSTT = false;\r\n        isCallTTS = false;\r\n        currentQuestion = 1;\r\n        correctAnswer = 0;\r\n        wrongAnswer = 0;\r\n\r\n        //  binding.textView26.setVisibility(View.VISIBLE);\r\n        //  binding.textViewQuestion.setVisibility(View.GONE);\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n        binding.progress.setText(\"1/10\");\r\n    }\r\n\r\n\r\n    private void setToolbar() {\r\n\r\n\r\n        binding.toolBar.getRoot().inflateMenu(R.menu.log_menu);\r\n        binding.toolBar.getRoot().setOnMenuItemClickListener(item -> {\r\n\r\n            switch (item.getItemId()) {\r\n                case R.id.action_log:\r\n                    startActivity(new Intent(getApplicationContext(), LogActivity.class));\r\n\r\n                    return true;\r\n                default:\r\n                    return super.onOptionsItemSelected(item);\r\n            }\r\n\r\n        });\r\n\r\n        binding.toolBar.titleText.setText(getIntent().getStringExtra(\"status\"));\r\n\r\n    }\r\n\r\n    private void setButtonClick() {\r\n        binding.playPause.setOnClickListener(v -> {\r\n            if (binding.playPause.isChecked()) {\r\n                binding.correctText.setText(\"0\");\r\n                binding.wrongText.setText(\"0\");\r\n                //    binding.textView26.setVisibility(View.GONE);\r\n                //   binding.textViewQuestion.setVisibility(View.VISIBLE);\r\n                binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n\r\n                isCallTTS = true;\r\n                try {\r\n                    setQuestion();\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n                //     binding.textView26.setVisibility(View.VISIBLE);\r\n                //   binding.textViewQuestion.setVisibility(View.GONE);\r\n                binding.animationVoice.setVisibility(View.GONE);\r\n                binding.questionProgress.setProgress(0);\r\n                binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n                isCallSTT = false;\r\n                isCallTTS = false;\r\n                if (!isAnswered)\r\n                    isNewQuestionGenerated=false;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setQuestion() throws InterruptedException {\r\n\r\n        UtilityFunctions.unMuteAudioStream(AdditionActivity.this);\r\n        isAnswered=false;\r\n\r\n        if (isCallTTS) {\r\n            int maxVal=20;\r\n            int minVal=2;\r\n            if (digit.equals(\"2\")){\r\n                maxVal=99;\r\n                minVal=10;\r\n            }\r\n\r\n            if (digit.equals(\"3\")){\r\n                maxVal=999;\r\n                minVal=100;\r\n\r\n            }\r\n            if (digit.equals(\"4\")){\r\n                maxVal=9999;\r\n                minVal=1000;\r\n\r\n            }\r\n            if (isNewQuestionGenerated){\r\n                if (digit.equals(\"1\")){\r\n                    currentNum1 = UtilityFunctions.getRandomNumber(Integer.parseInt(digit.trim()));\r\n                    currentNum2 = UtilityFunctions.getRandomNumber(Integer.parseInt(digit.trim()));\r\n                }\r\n                else{\r\n                    currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                    currentNum2 = UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                }\r\n\r\n                if (subject.equals(\"subtraction\")){\r\n                    if (currentNum1<currentNum2){\r\n                        int temp=currentNum1;\r\n                        currentNum1=currentNum2;\r\n                        currentNum2=temp;\r\n                    }\r\n                }\r\n                if (subject.equals(\"division\")){\r\n                    currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                    currentNum2=UtilityFunctions.getRandomIntegerUpto(9,2);\r\n                    while (!UtilityFunctions.isDivisible(currentNum1,currentNum2)){\r\n                        currentNum1=UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                    }\r\n                }\r\n\r\n            if (subject.equals(\"multiplication\")) {\r\n                currentNum1 = UtilityFunctions.getRandomIntegerUpto(10,2);\r\n                currentNum2 = UtilityFunctions.getRandomNumber(1);\r\n            }\r\n\r\n            }\r\n\r\n\r\n            logs+=\"Question :\"+currentNum1+binding.operator.getText()+\"\"+currentNum2+\"=?\\n\";\r\n            digit1Text.setText(currentNum1 + \"\");\r\n            binding.digitTwo.setText(currentNum2 + \"\");\r\n            binding.progress.setText(currentQuestion + \"/ \" + MAX_QUESTION);\r\n            binding.ansTextView.setText(\"?\");\r\n            currentAnswer = MathsHelper.getMathResult(subject, currentNum1, currentNum2);\r\n\r\n            isCallSTT = true;\r\n            tts.initialize(MathsHelper.getMathQuestion(subject, currentNum1, currentNum2), this);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        isCallTTS=false;\r\n        isCallSTT=false;\r\n\r\n        tts.stop();\r\n        stt.stop();\r\n\r\n        checkLogIsEnable();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        isCallTTS=true;\r\n        initSTT();\r\n        initTTS();\r\n    }\r\n\r\n    private void checkLogIsEnable() {\r\n        if (PrefConfig.readIdInPref(getApplicationContext(), \"IS_LOG_ENABLE\").equals(\"true\"))\r\n            saveLog();\r\n    }\r\n\r\n    private void saveLog() {\r\n        Log.d(TAG, \"saveLog: Called \" + logs);\r\n        UtilityFunctions.saveLog(logDatabase, logs);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.destroy();\r\n        stt.destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/maths/beyond_school_280720220930/AdditionActivity.java b/app/src/main/java/com/maths/beyond_school_280720220930/AdditionActivity.java
--- a/app/src/main/java/com/maths/beyond_school_280720220930/AdditionActivity.java	(revision b0c4692142f029de87dede1b2f42879b4a315081)
+++ b/app/src/main/java/com/maths/beyond_school_280720220930/AdditionActivity.java	(date 1660993984268)
@@ -419,6 +419,11 @@
         isCallTTS=false;
         isCallSTT=false;
 
+        try {
+            UtilityFunctions.unMuteAudioStream(getApplicationContext());
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
         tts.stop();
         stt.stop();
 
@@ -449,5 +454,10 @@
         super.onDestroy();
         tts.destroy();
         stt.destroy();
+        try {
+            UtilityFunctions.unMuteAudioStream(getApplicationContext());
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.maths.beyond_school_280720220930;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.youtube.player.YouTubeBaseActivity;\r\nimport com.google.android.youtube.player.YouTubeInitializationResult;\r\nimport com.google.android.youtube.player.YouTubePlayer;\r\nimport com.google.android.youtube.player.YouTubePlayerView;\r\nimport com.google.firebase.analytics.FirebaseAnalytics;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.maths.beyond_school_280720220930.SP.PrefConfig;\r\nimport com.maths.beyond_school_280720220930.database.log.LogDatabase;\r\nimport com.maths.beyond_school_280720220930.databinding.ActivityLearningBinding;\r\nimport com.maths.beyond_school_280720220930.dialogs.HintDialog;\r\nimport com.maths.beyond_school_280720220930.dialogs.VideoDialog;\r\nimport com.maths.beyond_school_280720220930.subjects.MathsHelper;\r\nimport com.maths.beyond_school_280720220930.translation_engine.ConversionCallback;\r\nimport com.maths.beyond_school_280720220930.translation_engine.SpeechToTextBuilder;\r\nimport com.maths.beyond_school_280720220930.translation_engine.TextToSpeechBuilder;\r\nimport com.maths.beyond_school_280720220930.translation_engine.translator.SpeechToTextConverter;\r\nimport com.maths.beyond_school_280720220930.translation_engine.translator.TextToSpeckConverter;\r\nimport com.maths.beyond_school_280720220930.utils.UtilityFunctions;\r\n\r\nimport java.util.Date;\r\n\r\npublic class LearningActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener {\r\n\r\n    private static final String TAG = LearningActivity.class.getSimpleName();\r\n    private ActivityLearningBinding binding;\r\n    private int currentAnswer;\r\n    private int currentQuestion = 1;\r\n    private int correctAnswer = 0;\r\n    private int wrongAnswer = 0;\r\n    private final int MAX_QUESTION = 10;\r\n    private int DELAY_ON_STARTING_STT=500;\r\n    private int DELAY_ON_SETTING_QUESTION=3000;\r\n    private TextToSpeckConverter tts;\r\n    private SpeechToTextConverter stt;\r\n    private Boolean isCallSTT = false;\r\n    private Boolean isCallTTS = true;\r\n    private Boolean isNewQuestionGenerated = true;\r\n    private Boolean isAnswered = false;\r\n    private Toolbar toolbar;\r\n\r\n    private String subject=\"\";\r\n    private String selectedSub=\"\";\r\n    private String digit=\"\";\r\n    private String videoUrl=\"\";\r\n    private String api_key=\"\";\r\n    private LogDatabase logDatabase;\r\n    private FirebaseAnalytics analytics;\r\n    private FirebaseAuth auth;\r\n    private long startTime = 0, endTime = 0;\r\n    private String logs = \"\";\r\n    int currentNum1=0 ;\r\n    int currentNum2=0;\r\n    private TextView digit1Text;\r\n    private YouTubePlayer.PlaybackEventListener playbackEventListener;\r\n    private YouTubePlayer.PlayerStateChangeListener playerStateChangeListener;\r\n\r\n    private YouTubePlayerView ytPlayer;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityLearningBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        setToolbar();\r\n\r\n        logDatabase = LogDatabase.getDbInstance(this);\r\n        analytics = FirebaseAnalytics.getInstance(getApplicationContext());\r\n        auth = FirebaseAuth.getInstance();\r\n        subject=getIntent().getStringExtra(\"subject\");\r\n        digit=getIntent().getStringExtra(\"max_digit\");\r\n        videoUrl=getIntent().getStringExtra(\"video_url\");\r\n        selectedSub=getIntent().getStringExtra(\"selected_sub\");\r\n        api_key=getResources().getString(R.string.youtube_api);\r\n\r\n\r\n\r\n        ytPlayer=findViewById(R.id.videoView);\r\n\r\n        Log.i(\"digit\",digit);\r\n        Log.i(\"url\",videoUrl);\r\n\r\n\r\n\r\n\r\n        initTTS();\r\n        initSTT();\r\n        setButtonClick();\r\n        setBasicUiElement();\r\n\r\n       // initYouTube();\r\n        binding.toolBar.imageViewBack.setOnClickListener(v->{\r\n            onBackPressed();\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private void initYouTube() {\r\n\r\n        ytPlayer.initialize(api_key,this);\r\n        playerStateChangeListener = new YouTubePlayer.PlayerStateChangeListener() {\r\n            @Override\r\n            public void onLoading() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onLoaded(String s) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onAdStarted() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onVideoStarted() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onVideoEnded() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(YouTubePlayer.ErrorReason errorReason) {\r\n\r\n            }\r\n        };\r\n\r\n        playbackEventListener = new YouTubePlayer.PlaybackEventListener() {\r\n            @Override\r\n            public void onPlaying() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPaused() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onStopped() {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onBuffering(boolean b) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onSeekTo(int i) {\r\n\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    private void displayHintDialog(String answer) {\r\n\r\n        HintDialog hintDialog = new HintDialog(LearningActivity.this);\r\n        hintDialog.setCancelable(false);\r\n        hintDialog.setAlertTitle(\"HINT\");\r\n        hintDialog.setAlertDesciption(answer);\r\n\r\n        hintDialog.setOnActionListener(viewId->{\r\n\r\n            switch (viewId.getId()){\r\n\r\n                case R.id.closeButton:\r\n                    hintDialog.dismiss();\r\n                    isCallTTS=true;\r\n                    break;\r\n\r\n\r\n            }\r\n        });\r\n\r\n        hintDialog.show();\r\n\r\n    }\r\n\r\n\r\n    private void setToolbar() {\r\n\r\n       binding.toolBar.imageViewBack.setImageDrawable(getDrawable(R.drawable.ic_baseline_arrow_back_24));\r\n\r\n        binding.toolBar.getRoot().inflateMenu(R.menu.log_menu);\r\n        binding.toolBar.getRoot().setOnMenuItemClickListener(item -> {\r\n\r\n            switch (item.getItemId()) {\r\n                case R.id.action_log:\r\n                    startActivity(new Intent(getApplicationContext(), LogActivity.class));\r\n\r\n                    return true;\r\n                default:\r\n                    return super.onOptionsItemSelected(item);\r\n            }\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setQuestion() throws InterruptedException {\r\n\r\n        UtilityFunctions.unMuteAudioStream(LearningActivity.this);\r\n\r\n\r\n        isAnswered=false;\r\n        if (isCallTTS){\r\n            int maxVal=20;\r\n            int minVal=2;\r\n            if (digit.equals(\"2\")){\r\n                maxVal=99;\r\n                minVal=10;\r\n            }\r\n\r\n            if (digit.equals(\"3\")){\r\n                maxVal=999;\r\n                minVal=100;\r\n\r\n            }\r\n            if (digit.equals(\"4\")){\r\n                maxVal=9999;\r\n                minVal=1000;\r\n\r\n            }\r\n\r\n\r\n            if (isNewQuestionGenerated){\r\n                if (digit.equals(\"1\")){\r\n                    currentNum1 = UtilityFunctions.getRandomNumber(Integer.parseInt(digit.trim()));\r\n                    currentNum2 = UtilityFunctions.getRandomNumber(Integer.parseInt(digit.trim()));\r\n                }\r\n                else{\r\n                    currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                    currentNum2 = UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                }\r\n\r\n                if (subject.equals(\"subtraction\")){\r\n                    if (currentNum1<currentNum2){\r\n                        int temp=currentNum1;\r\n                        currentNum1=currentNum2;\r\n                        currentNum2=temp;\r\n                    }\r\n                }\r\n                if (subject.equals(\"division\")){\r\n                    currentNum1 = UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                    currentNum2=UtilityFunctions.getRandomIntegerUpto(9,2);\r\n                    while (!UtilityFunctions.isDivisible(currentNum1,currentNum2)){\r\n                        currentNum1=UtilityFunctions.getRandomIntegerUpto(maxVal,minVal);\r\n                    }\r\n                }\r\n\r\n            if (subject.equals(\"multiplication\"))\r\n            {\r\n                currentNum1=Integer.parseInt(digit);\r\n                currentNum2=currentQuestion;\r\n            }}\r\n            logs+=\"Question :\"+currentNum1+binding.operator.getText()+\"\"+currentNum2+\"=?\\n\";\r\n            digit1Text.setText(currentNum1+\"\");\r\n            binding.digitTwo.setText(currentNum2+\"\");\r\n            binding.progress.setText(currentQuestion+\"/ \"+MAX_QUESTION);\r\n            binding.ansTextView.setText(\"?\");\r\n            currentAnswer = MathsHelper.getMathResult(subject,currentNum1,currentNum2);\r\n\r\n            isCallSTT = true;\r\n            tts.initialize(MathsHelper.getMathQuestion(subject,currentNum1,currentNum2), this);\r\n\r\n            isNewQuestionGenerated=true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private void play(){\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n        isCallTTS=true;\r\n        try {\r\n            setQuestion();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void pause(){\r\n        binding.animationVoice.setVisibility(View.GONE);\r\n        binding.questionProgress.setProgress(0);\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n\r\n        isCallSTT=false;\r\n        isCallTTS=false;\r\n        if (!isAnswered)\r\n        isNewQuestionGenerated=false;\r\n    }\r\n\r\n    private void setButtonClick() {\r\n        binding.playPause.setOnClickListener(v -> {\r\n            if (binding.playPause.isChecked()) {\r\n              //  binding.hintButton.setVisibility(View.VISIBLE);\r\n                play();\r\n            }\r\n            else {\r\n              pause();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setBasicUiElement() {\r\n\r\n       // binding.toolBar.titleText.setText(\"Learn \"+ subject.substring(0, 1).toUpperCase() + subject.substring(1));\r\n        binding.toolBar.titleText.setText(selectedSub);\r\n       // binding.subSub.setText(digit+\" Digit \"+subject.substring(0, 1).toUpperCase() + subject.substring(1));\r\n        if (subject.equals(\"addition\")){\r\n            binding.operator.setText(\"+\");\r\n            binding.digitOneH.setVisibility(View.VISIBLE);\r\n            binding.digitOne.setVisibility(View.INVISIBLE);\r\n\r\n            digit1Text=binding.digitOneH;\r\n\r\n        }\r\n\r\n\r\n        else if (subject.equals(\"subtraction\")){\r\n            binding.operator.setText(\"-\");\r\n            binding.digitOneH.setVisibility(View.VISIBLE);\r\n            binding.digitOne.setVisibility(View.INVISIBLE);\r\n            digit1Text=binding.digitOneH;\r\n        }\r\n\r\n\r\n        else if (subject.equals(\"multiplication\")){\r\n            binding.operator.setText(\"ร\");\r\n            //   binding.subSub.setText(\"Multiplication upto \"+digit +\"'s Table\");\r\n            digit1Text=binding.digitOne;\r\n\r\n        }\r\n\r\n\r\n        else if (subject.equals(\"division\")){\r\n            binding.operator.setText(\"รท\");\r\n            digit1Text=binding.digitOne;\r\n        }\r\n\r\n//        binding.learnOrTest.setOnClickListener(v->{\r\n//            Intent intent =new Intent(getApplicationContext(), AdditionActivity.class);\r\n//            intent.putExtra(\"subject\",subject);\r\n//            intent.putExtra(\"max_digit\", digit);\r\n//            startActivity(intent);\r\n//        });\r\n\r\n\r\n\r\n        binding.hintButton.setOnClickListener(v->{\r\n            pause();\r\n            binding.playPause.setChecked(false);\r\n           displayHintDialog(\"The answer is \"+currentAnswer);\r\n        });\r\n\r\n        binding.playVideoLayout.setOnClickListener(view -> {\r\n\r\n            if (!subject.equals(\"multiplication\"))\r\n            displayVideoDialog();\r\n\r\n\r\n        });\r\n\r\n\r\n        binding.giveTestButton.setOnClickListener(v->{\r\n            Intent intent =new Intent(getApplicationContext(), AdditionActivity.class);\r\n            intent.putExtra(\"subject\",subject);\r\n            intent.putExtra(\"max_digit\", digit);\r\n            intent.putExtra(\"video_url\",videoUrl);\r\n            intent.putExtra(\"selected_sub\",selectedSub);\r\n            startActivity(intent);\r\n            finish();\r\n        });\r\n\r\n\r\n        if (subject.equals(\"multiplication\"))\r\n            binding.playVideoLayout.setVisibility(View.INVISIBLE);\r\n\r\n\r\n\r\n    }\r\n\r\n    private void displayVideoDialog() {\r\n        final AlertDialog.Builder alert=new AlertDialog.Builder(LearningActivity.this);\r\n        View mView = getLayoutInflater().inflate(R.layout.video_dialog, null);\r\n\r\n\r\n         ytPlayer=mView.findViewById(R.id.videoView);\r\n        ImageView closeButton=  mView.findViewById(R.id.closeButton);\r\n         initYouTube();\r\n\r\n//        ytPlayer.initialize(\r\n//                api_key,\r\n//                new YouTubePlayer.OnInitializedListener() {\r\n//                    // Implement two methods by clicking on red\r\n//                    // error bulb inside onInitializationSuccess\r\n//                    // method add the video link or the playlist\r\n//                    // link that you want to play In here we\r\n//                    // also handle the play and pause\r\n//                    // functionality\r\n//                    @Override\r\n//                    public void onInitializationSuccess(\r\n//                            YouTubePlayer.Provider provider,\r\n//                            YouTubePlayer youTubePlayer, boolean b)\r\n//                    {\r\n//                        youTubePlayer.loadVideo(\"HzeK7g8cD0Y\");\r\n//                        youTubePlayer.play();\r\n//                    }\r\n//\r\n//                    // Inside onInitializationFailure\r\n//                    // implement the failure functionality\r\n//                    // Here we will show toast\r\n//                    @Override\r\n//                    public void onInitializationFailure(YouTubePlayer.Provider provider,\r\n//                                                        YouTubeInitializationResult\r\n//                                                                youTubeInitializationResult)\r\n//                    {\r\n//                        Toast.makeText(getApplicationContext(), \"Video player Failed\", Toast.LENGTH_SHORT).show();\r\n//                    }\r\n//                });\r\n\r\n        alert.setView(mView);\r\n        final AlertDialog alertDialog = alert.create();\r\n        alertDialog.setCancelable(true);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n\r\n        try{\r\n            alertDialog.show();\r\n        }catch (Exception e){\r\n\r\n        }\r\n\r\n        closeButton.setOnClickListener(v->alertDialog.dismiss());\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onSaveInstanceState(@NonNull Bundle outState) {\r\n        super.onSaveInstanceState(outState);\r\n\r\n        outState.putString(\"digit\",digit);\r\n        outState.putString(\"video_url\",videoUrl);\r\n        outState.putString(\"subject\",subject);\r\n        outState.putString(\"selected_sub\",selectedSub);\r\n    }\r\n\r\n    @Override\r\n    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {\r\n        super.onRestoreInstanceState(savedInstanceState);\r\n\r\n\r\n        digit=savedInstanceState.getString(\"digit\");\r\n        videoUrl=savedInstanceState.getString(\"videoUrl\");\r\n        subject=savedInstanceState.getString(\"subject\");\r\n        selectedSub=savedInstanceState.getString(\"selected_sub\");\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialize TTS engine\r\n     * Answer will be check here\r\n     */\r\n    private void initTTS() {\r\n        tts = TextToSpeechBuilder.builder(new ConversionCallback() {\r\n            @Override\r\n            public void onCompletion() {\r\n                if (isCallSTT && isCallTTS) {\r\n                    Log.i(\"inSideTTS\",\"InitSST\");\r\n                    UtilityFunctions.runOnUiThread(() -> {\r\n\r\n                      //  speakAnswer();\r\n                        startTime=new Date().getTime();\r\n                        UtilityFunctions.muteAudioStream(LearningActivity.this);\r\n                        isCallSTT=false;\r\n                        stt.initialize(\"\", LearningActivity.this);\r\n                        binding.animationVoice.setVisibility(View.VISIBLE);\r\n                    }, DELAY_ON_STARTING_STT);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n                UtilityFunctions.simpleToast(LearningActivity.this, errorMessage);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private void resetViews() {\r\n        binding.playPause.setChecked(false);\r\n        isCallSTT = false;\r\n        isCallTTS = false;\r\n        currentQuestion = 1;\r\n        binding.tapInfoTextView.setVisibility(View.INVISIBLE);\r\n        binding.progress.setText(\"1/10\");\r\n    }\r\n\r\n\r\n    private void speakAnswer(){\r\n\r\n        binding.ansTextView.setText(currentAnswer+\"\");\r\n        tts.initialize(\"the answer is \" + currentAnswer, LearningActivity.this);\r\n        DELAY_ON_STARTING_STT=2000;\r\n\r\n        currentQuestion++;\r\n        if (currentQuestion <= MAX_QUESTION) {\r\n\r\n            UtilityFunctions.runOnUiThread(() -> {\r\n                try {\r\n                    setQuestion();\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }, DELAY_ON_SETTING_QUESTION);\r\n        } else {\r\n            resetViews();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Initialize STT engine\r\n     * Answer will be check here\r\n     */\r\n    private void initSTT() {\r\n        stt = SpeechToTextBuilder.builder(new ConversionCallback() {\r\n            @RequiresApi(api = Build.VERSION_CODES.O)\r\n            @Override\r\n            public void onSuccess(String result) {\r\n                Log.d(TAG, \"onSuccess: \" + result);\r\n\r\n                isAnswered=true;\r\n                try {\r\n                    UtilityFunctions.unMuteAudioStream(LearningActivity.this);\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                //stt.stop();\r\n                binding.ansTextView.setText(result);\r\n                isCallSTT = false;\r\n                Boolean lcsResult=new UtilityFunctions().matchingSeq(result.trim(),currentAnswer+\"\");\r\n\r\n                endTime=new Date().getTime();\r\n                if (lcsResult) {\r\n                    tts.initialize(\"Correct Answer\", LearningActivity.this);\r\n                    UtilityFunctions.sendDataToAnalytics(analytics, auth.getCurrentUser().getUid().toString(), \"kidsid_default\", \"Name_default\",\r\n                            \"Mathematics-Practice-\"+ subject, 22,currentAnswer+\"\", result, true, (int) (endTime-startTime),\r\n                            currentNum1+\"\"+binding.operator.getText()+\"\"+currentNum2+\"=?\",\"maths\");\r\n                    logs+=\"Tag: Correct\\n\" +\"Time Taken: \"+UtilityFunctions.formatTime(endTime-startTime)+\"\\n\";\r\n                    DELAY_ON_STARTING_STT=500;\r\n                    DELAY_ON_SETTING_QUESTION=2000;\r\n                    correctAnswer++;\r\n\r\n                } else {\r\n                    tts.initialize(\"Wrong Answer and the correct answer is \" + currentAnswer, LearningActivity.this);\r\n                    UtilityFunctions.sendDataToAnalytics(analytics, auth.getCurrentUser().getUid().toString(), \"kidsid_default\", \"Name_default\",\r\n                            \"Mathematics-Practice-\"+ subject, 22,currentAnswer+\"\", result, false, (int) (endTime-startTime),\r\n                            currentNum1+\"\"+binding.operator.getText()+\"\"+currentNum2+\"=?\",\"maths\");\r\n                    logs+=\"Tag: Wrong\\n\" +\"Time Taken: \"+UtilityFunctions.formatTime(endTime-startTime)+\"\\n\";\r\n                    DELAY_ON_STARTING_STT=1800;\r\n                    DELAY_ON_SETTING_QUESTION=3000;\r\n                    wrongAnswer++;\r\n                }\r\n\r\n                currentQuestion++;\r\n                if (currentQuestion <= MAX_QUESTION) {\r\n\r\n                    UtilityFunctions.runOnUiThread(() -> {\r\n                        try {\r\n                            setQuestion();\r\n                        } catch (InterruptedException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }, DELAY_ON_SETTING_QUESTION);\r\n                } else {\r\n                    resetViews();\r\n                }\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCompletion() {\r\n                Log.d(TAG, \"onCompletion: Done\");\r\n                binding.animationVoice.setVisibility(View.GONE);\r\n            }\r\n\r\n            @Override\r\n            public void getLogResult(String title) {\r\n                ConversionCallback.super.getLogResult(title);\r\n                logs+=title+\"\\n\";\r\n            }\r\n\r\n            @Override\r\n            public void onErrorOccurred(String errorMessage) {\r\n\r\n                UtilityFunctions.runOnUiThread(()->{\r\n                    isCallSTT = true;\r\n                    tts.initialize(\"\", LearningActivity.this);\r\n                },250);\r\n\r\n\r\n                //  stt.initialize(\"\", LearningActivity.this);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        pause();\r\n        tts.stop();\r\n        stt.stop();\r\n        checkLogIsEnable();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        isCallTTS=true;\r\n        initSTT();\r\n        initTTS();\r\n    }\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.destroy();\r\n        stt.destroy();\r\n    }\r\n\r\n\r\n    private void checkLogIsEnable() {\r\n        if (PrefConfig.readIdInPref(getApplicationContext(), \"IS_LOG_ENABLE\").equals(\"true\"))\r\n            saveLog();\r\n    }\r\n\r\n    private void saveLog() {\r\n        Log.d(TAG, \"saveLog: Called \" + logs);\r\n        UtilityFunctions.saveLog(logDatabase, logs);\r\n    }\r\n\r\n    @Override\r\n    public void onInitializationSuccess(YouTubePlayer.Provider provider, YouTubePlayer youTubePlayer, boolean b) {\r\n\r\n        youTubePlayer.setPlayerStateChangeListener(playerStateChangeListener);\r\n        if(!b){\r\n            //youTubePlayer.cueVideo(\"EaXUuwz_caU\"); //Start NO automatically the video\r\n            youTubePlayer.loadVideo(videoUrl.split(\"/\")[3]);//Execute a playlist\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onInitializationFailure(YouTubePlayer.Provider provider, YouTubeInitializationResult youTubeInitializationResult) {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java b/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java
--- a/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java	(revision b0c4692142f029de87dede1b2f42879b4a315081)
+++ b/app/src/main/java/com/maths/beyond_school_280720220930/LearningActivity.java	(date 1660993984301)
@@ -652,6 +652,11 @@
         tts.stop();
         stt.stop();
         checkLogIsEnable();
+        try {
+            UtilityFunctions.unMuteAudioStream(getApplicationContext());
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
     }
 
     @Override
@@ -660,12 +665,18 @@
         isCallTTS=true;
         initSTT();
         initTTS();
+
     }
     @Override
     protected void onDestroy() {
         super.onDestroy();
         tts.destroy();
         stt.destroy();
+        try{
+        UtilityFunctions.unMuteAudioStream(getApplicationContext());
+    } catch (InterruptedException e) {
+        e.printStackTrace();
+    }
     }
 
 
