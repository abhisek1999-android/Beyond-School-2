// Generated by view binder compiler. Do not edit!
package com.maths.beyond_school_280720220930.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.maths.beyond_school_280720220930.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdditionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView ShowTable;

  @NonNull
  public final LottieAnimationView animationVoice;

  @NonNull
  public final TextView ansTextView;

  @NonNull
  public final ImageView bunny;

  @NonNull
  public final TextView correctText;

  @NonNull
  public final CoordinatorLayout dialPadLayout;

  @NonNull
  public final ImageView imageViewBack;

  @NonNull
  public final LinearLayout layoutSet;

  @NonNull
  public final ToggleButton playPause;

  @NonNull
  public final ProgressBar progressBar1;

  @NonNull
  public final RelativeLayout questionLayout;

  @NonNull
  public final ProgressBar questionProgress;

  @NonNull
  public final TextView questionView;

  @NonNull
  public final LinearLayout score;

  @NonNull
  public final TextView tapInfoTextView;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final ToolBarLayoutBackButtonBinding toolBar;

  @NonNull
  public final TextView wrongText;

  private ActivityAdditionBinding(@NonNull RelativeLayout rootView, @NonNull CardView ShowTable,
      @NonNull LottieAnimationView animationVoice, @NonNull TextView ansTextView,
      @NonNull ImageView bunny, @NonNull TextView correctText,
      @NonNull CoordinatorLayout dialPadLayout, @NonNull ImageView imageViewBack,
      @NonNull LinearLayout layoutSet, @NonNull ToggleButton playPause,
      @NonNull ProgressBar progressBar1, @NonNull RelativeLayout questionLayout,
      @NonNull ProgressBar questionProgress, @NonNull TextView questionView,
      @NonNull LinearLayout score, @NonNull TextView tapInfoTextView, @NonNull TextView textView22,
      @NonNull TextView textView23, @NonNull ToolBarLayoutBackButtonBinding toolBar,
      @NonNull TextView wrongText) {
    this.rootView = rootView;
    this.ShowTable = ShowTable;
    this.animationVoice = animationVoice;
    this.ansTextView = ansTextView;
    this.bunny = bunny;
    this.correctText = correctText;
    this.dialPadLayout = dialPadLayout;
    this.imageViewBack = imageViewBack;
    this.layoutSet = layoutSet;
    this.playPause = playPause;
    this.progressBar1 = progressBar1;
    this.questionLayout = questionLayout;
    this.questionProgress = questionProgress;
    this.questionView = questionView;
    this.score = score;
    this.tapInfoTextView = tapInfoTextView;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.toolBar = toolBar;
    this.wrongText = wrongText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdditionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdditionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addition, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdditionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ShowTable;
      CardView ShowTable = ViewBindings.findChildViewById(rootView, id);
      if (ShowTable == null) {
        break missingId;
      }

      id = R.id.animationVoice;
      LottieAnimationView animationVoice = ViewBindings.findChildViewById(rootView, id);
      if (animationVoice == null) {
        break missingId;
      }

      id = R.id.ansTextView;
      TextView ansTextView = ViewBindings.findChildViewById(rootView, id);
      if (ansTextView == null) {
        break missingId;
      }

      id = R.id.bunny;
      ImageView bunny = ViewBindings.findChildViewById(rootView, id);
      if (bunny == null) {
        break missingId;
      }

      id = R.id.correctText;
      TextView correctText = ViewBindings.findChildViewById(rootView, id);
      if (correctText == null) {
        break missingId;
      }

      id = R.id.dialPadLayout;
      CoordinatorLayout dialPadLayout = ViewBindings.findChildViewById(rootView, id);
      if (dialPadLayout == null) {
        break missingId;
      }

      id = R.id.imageViewBack;
      ImageView imageViewBack = ViewBindings.findChildViewById(rootView, id);
      if (imageViewBack == null) {
        break missingId;
      }

      id = R.id.layout_set;
      LinearLayout layoutSet = ViewBindings.findChildViewById(rootView, id);
      if (layoutSet == null) {
        break missingId;
      }

      id = R.id.playPause;
      ToggleButton playPause = ViewBindings.findChildViewById(rootView, id);
      if (playPause == null) {
        break missingId;
      }

      id = R.id.progressBar1;
      ProgressBar progressBar1 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar1 == null) {
        break missingId;
      }

      id = R.id.questionLayout;
      RelativeLayout questionLayout = ViewBindings.findChildViewById(rootView, id);
      if (questionLayout == null) {
        break missingId;
      }

      id = R.id.questionProgress;
      ProgressBar questionProgress = ViewBindings.findChildViewById(rootView, id);
      if (questionProgress == null) {
        break missingId;
      }

      id = R.id.questionView;
      TextView questionView = ViewBindings.findChildViewById(rootView, id);
      if (questionView == null) {
        break missingId;
      }

      id = R.id.score;
      LinearLayout score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      id = R.id.tapInfoTextView;
      TextView tapInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (tapInfoTextView == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.toolBar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      ToolBarLayoutBackButtonBinding binding_toolBar = ToolBarLayoutBackButtonBinding.bind(toolBar);

      id = R.id.wrongText;
      TextView wrongText = ViewBindings.findChildViewById(rootView, id);
      if (wrongText == null) {
        break missingId;
      }

      return new ActivityAdditionBinding((RelativeLayout) rootView, ShowTable, animationVoice,
          ansTextView, bunny, correctText, dialPadLayout, imageViewBack, layoutSet, playPause,
          progressBar1, questionLayout, questionProgress, questionView, score, tapInfoTextView,
          textView22, textView23, binding_toolBar, wrongText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
