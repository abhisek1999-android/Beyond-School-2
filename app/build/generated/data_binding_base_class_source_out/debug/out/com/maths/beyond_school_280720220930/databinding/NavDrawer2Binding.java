// Generated by view binder compiler. Do not edit!
package com.maths.beyond_school_280720220930.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.maths.beyond_school_280720220930.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NavDrawer2Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout dash;

  @NonNull
  public final LinearLayout home;

  @NonNull
  public final LinearLayout logout;

  @NonNull
  public final LinearLayout logoutLayout;

  @NonNull
  public final LinearLayout remind;

  @NonNull
  public final LinearLayout settings;

  @NonNull
  public final DrawerHeaderBinding toolBar;

  private NavDrawer2Binding(@NonNull RelativeLayout rootView, @NonNull LinearLayout dash,
      @NonNull LinearLayout home, @NonNull LinearLayout logout, @NonNull LinearLayout logoutLayout,
      @NonNull LinearLayout remind, @NonNull LinearLayout settings,
      @NonNull DrawerHeaderBinding toolBar) {
    this.rootView = rootView;
    this.dash = dash;
    this.home = home;
    this.logout = logout;
    this.logoutLayout = logoutLayout;
    this.remind = remind;
    this.settings = settings;
    this.toolBar = toolBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NavDrawer2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NavDrawer2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nav_drawer2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NavDrawer2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dash;
      LinearLayout dash = ViewBindings.findChildViewById(rootView, id);
      if (dash == null) {
        break missingId;
      }

      id = R.id.home;
      LinearLayout home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.logout;
      LinearLayout logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.logoutLayout;
      LinearLayout logoutLayout = ViewBindings.findChildViewById(rootView, id);
      if (logoutLayout == null) {
        break missingId;
      }

      id = R.id.remind;
      LinearLayout remind = ViewBindings.findChildViewById(rootView, id);
      if (remind == null) {
        break missingId;
      }

      id = R.id.settings;
      LinearLayout settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.toolBar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      DrawerHeaderBinding binding_toolBar = DrawerHeaderBinding.bind(toolBar);

      return new NavDrawer2Binding((RelativeLayout) rootView, dash, home, logout, logoutLayout,
          remind, settings, binding_toolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
