// Generated by view binder compiler. Do not edit!
package com.maths.beyond_school_280720220930.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.BarChart;
import com.maths.beyond_school_280720220930.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashBoardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BarChart barChart;

  @NonNull
  public final NestedScrollView completeLayout;

  @NonNull
  public final TextView filterBy;

  @NonNull
  public final TextView noData;

  @NonNull
  public final TextView noDataText;

  @NonNull
  public final TextView progressDate;

  @NonNull
  public final TextView progressDetails;

  @NonNull
  public final RecyclerView progressReport;

  @NonNull
  public final TextView tCorrect;

  @NonNull
  public final ProgressBar tProgressResult;

  @NonNull
  public final TextView tQuestions;

  @NonNull
  public final TextView tWrong;

  @NonNull
  public final ToolBarLayoutBackButtonBinding toolBar;

  @NonNull
  public final TextView totalQuestion;

  @NonNull
  public final TextView totalRight;

  @NonNull
  public final TextView totalWrong;

  private ActivityDashBoardBinding(@NonNull RelativeLayout rootView, @NonNull BarChart barChart,
      @NonNull NestedScrollView completeLayout, @NonNull TextView filterBy,
      @NonNull TextView noData, @NonNull TextView noDataText, @NonNull TextView progressDate,
      @NonNull TextView progressDetails, @NonNull RecyclerView progressReport,
      @NonNull TextView tCorrect, @NonNull ProgressBar tProgressResult,
      @NonNull TextView tQuestions, @NonNull TextView tWrong,
      @NonNull ToolBarLayoutBackButtonBinding toolBar, @NonNull TextView totalQuestion,
      @NonNull TextView totalRight, @NonNull TextView totalWrong) {
    this.rootView = rootView;
    this.barChart = barChart;
    this.completeLayout = completeLayout;
    this.filterBy = filterBy;
    this.noData = noData;
    this.noDataText = noDataText;
    this.progressDate = progressDate;
    this.progressDetails = progressDetails;
    this.progressReport = progressReport;
    this.tCorrect = tCorrect;
    this.tProgressResult = tProgressResult;
    this.tQuestions = tQuestions;
    this.tWrong = tWrong;
    this.toolBar = toolBar;
    this.totalQuestion = totalQuestion;
    this.totalRight = totalRight;
    this.totalWrong = totalWrong;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashBoardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashBoardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dash_board, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashBoardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barChart;
      BarChart barChart = ViewBindings.findChildViewById(rootView, id);
      if (barChart == null) {
        break missingId;
      }

      id = R.id.completeLayout;
      NestedScrollView completeLayout = ViewBindings.findChildViewById(rootView, id);
      if (completeLayout == null) {
        break missingId;
      }

      id = R.id.filterBy;
      TextView filterBy = ViewBindings.findChildViewById(rootView, id);
      if (filterBy == null) {
        break missingId;
      }

      id = R.id.noData;
      TextView noData = ViewBindings.findChildViewById(rootView, id);
      if (noData == null) {
        break missingId;
      }

      id = R.id.noDataText;
      TextView noDataText = ViewBindings.findChildViewById(rootView, id);
      if (noDataText == null) {
        break missingId;
      }

      id = R.id.progressDate;
      TextView progressDate = ViewBindings.findChildViewById(rootView, id);
      if (progressDate == null) {
        break missingId;
      }

      id = R.id.progressDetails;
      TextView progressDetails = ViewBindings.findChildViewById(rootView, id);
      if (progressDetails == null) {
        break missingId;
      }

      id = R.id.progressReport;
      RecyclerView progressReport = ViewBindings.findChildViewById(rootView, id);
      if (progressReport == null) {
        break missingId;
      }

      id = R.id.tCorrect;
      TextView tCorrect = ViewBindings.findChildViewById(rootView, id);
      if (tCorrect == null) {
        break missingId;
      }

      id = R.id.tProgressResult;
      ProgressBar tProgressResult = ViewBindings.findChildViewById(rootView, id);
      if (tProgressResult == null) {
        break missingId;
      }

      id = R.id.tQuestions;
      TextView tQuestions = ViewBindings.findChildViewById(rootView, id);
      if (tQuestions == null) {
        break missingId;
      }

      id = R.id.tWrong;
      TextView tWrong = ViewBindings.findChildViewById(rootView, id);
      if (tWrong == null) {
        break missingId;
      }

      id = R.id.toolBar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      ToolBarLayoutBackButtonBinding binding_toolBar = ToolBarLayoutBackButtonBinding.bind(toolBar);

      id = R.id.totalQuestion;
      TextView totalQuestion = ViewBindings.findChildViewById(rootView, id);
      if (totalQuestion == null) {
        break missingId;
      }

      id = R.id.totalRight;
      TextView totalRight = ViewBindings.findChildViewById(rootView, id);
      if (totalRight == null) {
        break missingId;
      }

      id = R.id.totalWrong;
      TextView totalWrong = ViewBindings.findChildViewById(rootView, id);
      if (totalWrong == null) {
        break missingId;
      }

      return new ActivityDashBoardBinding((RelativeLayout) rootView, barChart, completeLayout,
          filterBy, noData, noDataText, progressDate, progressDetails, progressReport, tCorrect,
          tProgressResult, tQuestions, tWrong, binding_toolBar, totalQuestion, totalRight,
          totalWrong);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
